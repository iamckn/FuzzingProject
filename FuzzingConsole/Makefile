#############################################################################
# Makefile for building: jiance
# Generated by qmake (2.01a) (Qt 4.8.6) on: ?? 8? 18 12:12:21 2014
# Project:  jiance.pro
# Template: app
# Command: /usr/lib/i386-linux-gnu/qt4/bin/qmake -o Makefile jiance.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/i386-linux-gnu -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/lib/i386-linux-gnu/qt4/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = aboutd.cpp \
		FuzzThread.cpp \
		Logger.cpp \
		main.cpp \
		mainwindow.cpp \
		Sockets.cpp \
		splashScreen.cpp \
		Threads.cpp \
		Timeval.cpp moc_aboutd.cpp \
		moc_FuzzThread.cpp \
		moc_mainwindow.cpp \
		moc_splashScreen.cpp \
		qrc_img.cpp
OBJECTS       = aboutd.o \
		FuzzThread.o \
		Logger.o \
		main.o \
		mainwindow.o \
		Sockets.o \
		splashScreen.o \
		Threads.o \
		Timeval.o \
		moc_aboutd.o \
		moc_FuzzThread.o \
		moc_mainwindow.o \
		moc_splashScreen.o \
		qrc_img.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		jiance.pro
QMAKE_TARGET  = jiance
DESTDIR       = 
TARGET        = jiance

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_aboutd.h ui_mainwindow.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: jiance.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/i386-linux-gnu/libQtGui.prl \
		/usr/lib/i386-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile jiance.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/shared.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/i386-linux-gnu/libQtGui.prl:
/usr/lib/i386-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile jiance.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/jiance1.0.0 || $(MKDIR) .tmp/jiance1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/jiance1.0.0/ && $(COPY_FILE) --parents aboutd.h FuzzThread.h Logger.h mainwindow.h networkmessages.h Sockets.h splashScreen.h Threads.h Timeval.h .tmp/jiance1.0.0/ && $(COPY_FILE) --parents img.qrc .tmp/jiance1.0.0/ && $(COPY_FILE) --parents aboutd.cpp FuzzThread.cpp Logger.cpp main.cpp mainwindow.cpp Sockets.cpp splashScreen.cpp Threads.cpp Timeval.cpp .tmp/jiance1.0.0/ && $(COPY_FILE) --parents aboutd.ui mainwindow.ui .tmp/jiance1.0.0/ && (cd `dirname .tmp/jiance1.0.0` && $(TAR) jiance1.0.0.tar jiance1.0.0 && $(COMPRESS) jiance1.0.0.tar) && $(MOVE) `dirname .tmp/jiance1.0.0`/jiance1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/jiance1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_aboutd.cpp moc_FuzzThread.cpp moc_mainwindow.cpp moc_splashScreen.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_aboutd.cpp moc_FuzzThread.cpp moc_mainwindow.cpp moc_splashScreen.cpp
moc_aboutd.cpp: aboutd.h
	/usr/lib/i386-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) aboutd.h -o moc_aboutd.cpp

moc_FuzzThread.cpp: Sockets.h \
		Logger.h \
		Threads.h \
		FuzzThread.h
	/usr/lib/i386-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) FuzzThread.h -o moc_FuzzThread.cpp

moc_mainwindow.cpp: aboutd.h \
		Sockets.h \
		FuzzThread.h \
		Logger.h \
		Threads.h \
		mainwindow.h
	/usr/lib/i386-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

moc_splashScreen.cpp: splashScreen.h
	/usr/lib/i386-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) splashScreen.h -o moc_splashScreen.cpp

compiler_rcc_make_all: qrc_img.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_img.cpp
qrc_img.cpp: img.qrc \
		img/search.png \
		img/gantan.png \
		img/about.png \
		img/new.png \
		img/find.png \
		img/stop.png \
		img/close.png \
		img/exit.png \
		img/jianqie.png \
		img/start.png \
		img/correct.png \
		img/save.png \
		img/paste.png \
		img/open.png \
		img/return.png \
		img/error.png \
		img1/Loading.gif \
		img1/duan.png \
		img1/srv_lunbotu2_1.png \
		img1/logo.png \
		img1/state_info.png \
		img1/folder.png \
		img1/srv_lunbotu3_meitu_1_1.png \
		img1/logo1.png \
		img1/pica.png \
		img1/xiaohui.png \
		img1/status.png \
		img1/lunbo.default_1.png \
		img1/srv_lunbotu2.png \
		img1/L3.png \
		img1/srv_lunbotu3_meitu_1.png \
		img1/pic1.png \
		img1/loadingSina.gif \
		img1/ExplorerEntry.ico \
		img1/state_ok.png \
		img1/pic.png \
		img1/srv_lunbotu21.png \
		img1/start.png
	/usr/lib/i386-linux-gnu/qt4/bin/rcc -name img img.qrc -o qrc_img.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_aboutd.h ui_mainwindow.h
compiler_uic_clean:
	-$(DEL_FILE) ui_aboutd.h ui_mainwindow.h
ui_aboutd.h: aboutd.ui
	/usr/lib/i386-linux-gnu/qt4/bin/uic aboutd.ui -o ui_aboutd.h

ui_mainwindow.h: mainwindow.ui
	/usr/lib/i386-linux-gnu/qt4/bin/uic mainwindow.ui -o ui_mainwindow.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 

####### Compile

aboutd.o: aboutd.cpp aboutd.h \
		ui_aboutd.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o aboutd.o aboutd.cpp

FuzzThread.o: FuzzThread.cpp FuzzThread.h \
		Sockets.h \
		Logger.h \
		Threads.h \
		networkmessages.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o FuzzThread.o FuzzThread.cpp

Logger.o: Logger.cpp Sockets.h \
		Logger.h \
		Threads.h \
		Timeval.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Logger.o Logger.cpp

main.o: main.cpp mainwindow.h \
		aboutd.h \
		Sockets.h \
		FuzzThread.h \
		Logger.h \
		Threads.h \
		splashScreen.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainwindow.o: mainwindow.cpp mainwindow.h \
		aboutd.h \
		Sockets.h \
		FuzzThread.h \
		Logger.h \
		Threads.h \
		ui_mainwindow.h \
		networkmessages.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

Sockets.o: Sockets.cpp Threads.h \
		Sockets.h \
		Logger.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Sockets.o Sockets.cpp

splashScreen.o: splashScreen.cpp splashScreen.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o splashScreen.o splashScreen.cpp

Threads.o: Threads.cpp Threads.h \
		Timeval.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Threads.o Threads.cpp

Timeval.o: Timeval.cpp Timeval.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Timeval.o Timeval.cpp

moc_aboutd.o: moc_aboutd.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_aboutd.o moc_aboutd.cpp

moc_FuzzThread.o: moc_FuzzThread.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_FuzzThread.o moc_FuzzThread.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_splashScreen.o: moc_splashScreen.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_splashScreen.o moc_splashScreen.cpp

qrc_img.o: qrc_img.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_img.o qrc_img.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

